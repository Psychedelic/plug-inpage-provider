diff --git a/node_modules/@dfinity/agent/lib/cjs/agent/http/index.js b/node_modules/@dfinity/agent/lib/cjs/agent/http/index.js
index 1ae0e0b..8227541 100644
--- a/node_modules/@dfinity/agent/lib/cjs/agent/http/index.js
+++ b/node_modules/@dfinity/agent/lib/cjs/agent/http/index.js
@@ -151,6 +151,7 @@ class HttpAgent {
         const body = cbor.encode(transformedRequest.body);
         // Run both in parallel. The fetch is quite expensive, so we have plenty of time to
         // calculate the requestId locally.
+        console.log('encoded', body);
         const [response, requestId] = await Promise.all([
             this._fetch('' + new URL(`/api/v2/canister/${ecid.toText()}/call`, this._host), Object.assign(Object.assign({}, transformedRequest.request), { body })),
             request_id_1.requestIdOf(submit),
diff --git a/node_modules/@dfinity/agent/lib/esm/agent/http/index.js b/node_modules/@dfinity/agent/lib/esm/agent/http/index.js
index 3a8d799..9daa744 100644
--- a/node_modules/@dfinity/agent/lib/esm/agent/http/index.js
+++ b/node_modules/@dfinity/agent/lib/esm/agent/http/index.js
@@ -124,6 +124,7 @@ export class HttpAgent {
         // Apply transform for identity.
         transformedRequest = await id.transformRequest(transformedRequest);
         const body = cbor.encode(transformedRequest.body);
+        console.log('encoded', body);
         // Run both in parallel. The fetch is quite expensive, so we have plenty of time to
         // calculate the requestId locally.
         const [response, requestId] = await Promise.all([
